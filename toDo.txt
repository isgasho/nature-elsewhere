Develop Nature Elsewhere into a complete, beautiful, iconic, fun, finely built game with tremendous colors.
  Make large, lavish, content-rich levels.
    Add options UI.
    Add pause level.
    Improve the title screen and Nature Elsewhere logo. It needs to pop.
    Improve the level editor and toolbelt UI. Shift a little more towards ornate.
      Maybe a big heart bar or health globe.
    Add inventory management.
      Add "a summary of you" / inven / journal screen level.
      Add more items to gather like artifacts and animal byproducts like bee stingers.
    Add gameplay.
      Maybe you attack by touching enemies at diagonally.
      Are there ranged attacks like bow and arrows?
    Make many wonderful entities.
      Add more monuments and stained glass.
      Add tornados.
      Add lightning to the cloud entity.
      Add cactus.
      Add more clouds.
      Add pond shader.
      Add rainbow.
      Add waterfall.
      Add quicksand.
      Add more trees.
      Add level boundaries. Maybe tileable water.
      Improve the grass clumps. The mocks seem a lot nicer. Maybe just make them all shorter?
      Improve grass patches. These are currently path hacks and should be nicer.
      Check that the entities have strong, even, isometric perspectives.
      I need a better way to manage states and transitions.
        Entities are currently convenient configurations to pass to image factories that generate groups of images. The default entity can literally just be images.
        There's some great examples of how to do player states, FSMs, and collision detection / gravity in https://script-8.github.io/?id=a3b40a159db3c794c1024fba73f4eb99.
        There's some good examples in Underrun too. E.g., the Entity class: https://github.com/phoboslab/underrun/blob/master/source/entity-sentry.js
      Consider alternative rain shader patterns.
      Develop entity behaviors (AI) more. The circle bee behavior might be a good starting point.
      Add some kind of unstoppable giant monster / colossus / death entity.
  Synthesize sounds.
    Understand the basics: https://news.ycombinator.com/item?id=20272346
    Rename audio player to speaker or something.
    Flesh out the audio system.
      Synthesize crickets, wind, rain, thunder, and birds.
    Survey all the demos in Super Collider.
  Improve the structure. Write little, clearly.
    What TypeScript and other open source examples should I consider?
    Re-review WebGL implementations.
    Update the readme.
      It's pretty incoherent and out of date WRT the devlog, the codebase, and Twitter.
  Add windy grass displacement shader to make the fields pop.
    Maybe look through shader toys and displacement shader 101s.
      https://forums.tigsource.com/index.php?topic=40539.20
      https://www.austinobrien.me/blog/shader-study/slime-rancher-pixel-display
    Add shadow distortion shader too.
    Do I need a shader for better types of water? What does it look like?
  How can I move my planning materials into the VCS?
  Review Diablo tile IDs: https://www.boristhebrave.com/2019/07/14/dungeon-generation-in-diablo-1/

aseprite-atlas
  Reconsider JSON serialization of infinite duration. If a special value like null or not present is used, either a parser for the parsed output or conditionals all over is needed.
  Keep thinking on OO tradeoffs.
mem-font
  Push mem-font changes upstream and rework project.
  Move mem-font to oddoid repo.
