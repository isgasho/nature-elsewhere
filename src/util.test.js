import * as util from './util.js'

describe('wrap()', () => {
  test.each(
    // prettier-ignore
    [
      // Negative empty range.
      [ -5, -1, -1, -1],
      [ -4, -1, -1, -1],
      [ -3, -1, -1, -1],
      [ -2, -1, -1, -1],
      [ -1, -1, -1, -1],
      [  0, -1, -1, -1],
      [  1, -1, -1, -1],
      [  2, -1, -1, -1],
      [  3, -1, -1, -1],
      [  4, -1, -1, -1],
      [  5, -1, -1, -1],

      // Zero empty range.
      [ -5,  0,  0,  0],
      [ -4,  0,  0,  0],
      [ -3,  0,  0,  0],
      [ -2,  0,  0,  0],
      [ -1,  0,  0,  0],
      [  0,  0,  0,  0],
      [  1,  0,  0,  0],
      [  2,  0,  0,  0],
      [  3,  0,  0,  0],
      [  4,  0,  0,  0],
      [  5,  0,  0,  0],

      // Positive empty range.
      [ -5, 1, 1, 1],
      [ -4, 1, 1, 1],
      [ -3, 1, 1, 1],
      [ -2, 1, 1, 1],
      [ -1, 1, 1, 1],
      [  0, 1, 1, 1],
      [  1, 1, 1, 1],
      [  2, 1, 1, 1],
      [  3, 1, 1, 1],
      [  4, 1, 1, 1],
      [  5, 1, 1, 1],

      // Negative to zero range.
      [ -5, -1,  0, -1],
      [ -4, -1,  0,  0],
      [ -3, -1,  0, -1],
      [ -2, -1,  0,  0],
      [ -1, -1,  0, -1],
      [  0, -1,  0,  0],
      [  1, -1,  0, -1],
      [  2, -1,  0,  0],
      [  3, -1,  0, -1],
      [  4, -1,  0,  0],
      [  5, -1,  0, -1],

      // Zero to positive range.
      [ -5,  0,  1,  1],
      [ -4,  0,  1,  0],
      [ -3,  0,  1,  1],
      [ -2,  0,  1,  0],
      [ -1,  0,  1,  1],
      [  0,  0,  1,  0],
      [  1,  0,  1,  1],
      [  2,  0,  1,  0],
      [  3,  0,  1,  1],
      [  4,  0,  1,  0],
      [  5,  0,  1,  1],

      // Negative to positive range.
      [ -5, -1,  1,  1],
      [ -4, -1,  1, -1],
      [ -3, -1,  1,  0],
      [ -2, -1,  1,  1],
      [ -1, -1,  1, -1],
      [  0, -1,  1,  0],
      [  1, -1,  1,  1],
      [  2, -1,  1, -1],
      [  3, -1,  1,  0],
      [  4, -1,  1,  1],
      [  5, -1,  1, -1],

      // Negative range.
      [ -5, -3, -1, -2],
      [ -4, -3, -1, -1],
      [ -3, -3, -1, -3],
      [ -2, -3, -1, -2],
      [ -1, -3, -1, -1],
      [  0, -3, -1, -3],
      [  1, -3, -1, -2],
      [  2, -3, -1, -1],
      [  3, -3, -1, -3],
      [  4, -3, -1, -2],
      [  5, -3, -1, -1],

      // Positive range.
      [ -5,  1,  3,  1],
      [ -4,  1,  3,  2],
      [ -3,  1,  3,  3],
      [ -2,  1,  3,  1],
      [ -1,  1,  3,  2],
      [  0,  1,  3,  3],
      [  1,  1,  3,  1],
      [  2,  1,  3,  2],
      [  3,  1,  3,  3],
      [  4,  1,  3,  1],
      [  5,  1,  3,  2],

      // Negative to positive range with many inputs.
      [-20, -3,  3,  1],
      [-19, -3,  3,  2],
      [-18, -3,  3,  3],
      [-17, -3,  3, -3],
      [-16, -3,  3, -2],
      [-15, -3,  3, -1],
      [-14, -3,  3,  0],
      [-13, -3,  3,  1],
      [-12, -3,  3,  2],
      [-11, -3,  3,  3],
      [-10, -3,  3, -3],
      [ -9, -3,  3, -2],
      [ -8, -3,  3, -1],
      [ -7, -3,  3,  0],
      [ -6, -3,  3,  1],
      [ -5, -3,  3,  2],
      [ -4, -3,  3,  3],
      [ -3, -3,  3, -3],
      [ -2, -3,  3, -2],
      [ -1, -3,  3, -1],
      [  0, -3,  3,  0],
      [  1, -3,  3,  1],
      [  2, -3,  3,  2],
      [  3, -3,  3,  3],
      [  4, -3,  3, -3],
      [  5, -3,  3, -2],
      [  6, -3,  3, -1],
      [  7, -3,  3,  0],
      [  8, -3,  3,  1],
      [  9, -3,  3,  2],
      [ 10, -3,  3,  3],
      [ 11, -3,  3, -3],
      [ 12, -3,  3, -2],
      [ 13, -3,  3, -1],
      [ 14, -3,  3,  0],
      [ 15, -3,  3,  1],
      [ 16, -3,  3,  2],
      [ 17, -3,  3,  3],
      [ 18, -3,  3, -3],
      [ 19, -3,  3, -2],
      [ 20, -3,  3, -1],
    ]
  )('%#) %p wrap [%p,%p]', (
    /** @type {number} */ x,
    /** @type {number} */ min,
    /** @type {number} */ max,
    /** @type {number} */ expected
  ) => expect(util.wrap(x, min, max)).toStrictEqual(expected))
})
